openapi: 3.0.3
info:
  title: Cycling Equipment API
  description: The API documentation for tracking cycling equipment and parts - tour related definitions
  version: 1.0.0
  license:
    name: (c) CyclingSir
  contact:
    name: CyclingSir
    url: https://github.com/cyc1ingsir
servers:
  - url: http://localhost:8080/{basePath}
    description: the default server url
    variables:
      basePath:
        default: api
tags:
  - name: Tours
    description: Tour related definitions

paths:
  /tours:
    get:
      operationId: getTours
      description: returns all unfiltered tours
      tags:
        - Tours
      responses:
        '200':
          description: o.k.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tours'
        '204':
          description: No Content
        '400':
          description: Bad Request
        '404':
          description: Not Found
    post:
      operationId: createTour
      description: creates a new tour
      tags:
        - Tours
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tour'
      responses:
        '200':
          description: o.k.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tour'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  /tours/upload:
    post:
      operationId: uploadTours
      description: upload tour list exported from MyTourbook
      tags:
        - Tours
      requestBody:
        required: true
        content:
          'text/plain; charset=utf-8':
            schema:
              type: string
      responses:
        '201':
          description: The Uploaded file was successfully processed
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  /tours/import:
    post:
      operationId: importTours
      description: import tours exported from MyTourbook Derby DB as JSON from DBeaver
      tags:
        - Tours
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MTTours'
      responses:
        '201':
          description: The Uploaded file was successfully processed
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  /tours/{tourId}:
    parameters:
      - $ref: '#/components/parameters/tourId'
    get:
      operationId: getTour
      description: returns a single tour
      tags:
        - Tours
      responses:
        '200':
          description: o.k.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tour'
        '400':
          description: Bad Request
        '404':
          description: Not Found
  /tours/{tourId}/action/relate:
    parameters:
      - $ref: '#/components/parameters/tourId'
      - $ref: '#/components/parameters/bikeId'
    post:
      operationId: relateBikeToTour
      description: relates a bike to the tour
      tags:
        - Tours
      responses:
        '200':
          description: o.k.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tour'
        '400':
          description: Bad Request
        '404':
          description: Not Found

components:
  parameters:
    tourId:
      name: tourId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    bikeId:
      name: bikeId
      in: query
      required: true
      schema:
        type: string
        format: uuid
  schemas:
    Tour:
      type: object
      required:
       - title
       - distance
       - durationMoving
       - startedAt
      properties:
        id:
          type: string
          format: uuid
          description: id of the created tour
          readOnly: true
        title:
          type: string
          description: tour's model name
        distance:
          type: integer
          minimum: 0
        durationMoving:
          type: integer
          format: int64
          minimum: 0
        startedAt:
          type: string
          format: date-time
        bike:
          $ref: './bike-api.yaml#/components/schemas/Bike'
        createdAt:
          type: string
          format: date-time
    MTTour:
      type: object
      required:
        - MTTOURID
        - TITLE
        - DISTANCE
        - DURATIONMOVING
        - STARTYEAR
        - STARTMONTH
        - STARTDAY
        - STARTTIMESTAMP
      properties:
        MTTOURID:
          type: string
          description: id for the tour created by MT
        TITLE:
          type: string
          description: tour's model name
        DISTANCE:
          type: integer
          minimum: 0
          description: tour's distance in meters
        DURATIONMOVING:
          type: integer
          format: int64
          minimum: 0
          description: time cycled in seconds
        TIMEELAPSEDDEVICE:
          type: integer
          format: int64
          minimum: 0
          description: time including stops in seconds
        TIMERECORDEDDEVICE:
          type: integer
          format: int64
          minimum: 0
          description: recorded movement by device
        STARTTIMESTAMP:
          type: integer
          format: int64
          minimum: 1
          description: tour's start time in unix epoch
        bikeId:
          type: string
          format: uuid
          description: bike used on the tour
    Tours:
      type: array
      items:
        $ref: '#/components/schemas/Tour'
    MTTours:
      type: array
      items:
        $ref: '#/components/schemas/MTTour'
